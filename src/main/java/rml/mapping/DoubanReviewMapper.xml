<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="rml.dao.DoubanReviewMapper" >
  <resultMap id="BaseResultMap" type="rml.model.DoubanReview" >
    <result column="movie_name" property="movieName" jdbcType="VARCHAR" />
    <result column="star" property="star" jdbcType="INTEGER" />
    <result column="descs" property="descs" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    movie_name, star, descs
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="rml.model.DoubanReviewExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from douban_review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <insert id="insert" parameterType="rml.model.DoubanReview" >
    insert into douban_review (movie_name, star, descs
      )
    values (#{movieName,jdbcType=VARCHAR}, #{star,jdbcType=INTEGER}, #{descs,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="rml.model.DoubanReview" >
    insert into douban_review
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="movieName != null" >
        movie_name,
      </if>
      <if test="star != null" >
        star,
      </if>
      <if test="descs != null" >
        descs,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="movieName != null" >
        #{movieName,jdbcType=VARCHAR},
      </if>
      <if test="star != null" >
        #{star,jdbcType=INTEGER},
      </if>
      <if test="descs != null" >
        #{descs,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="rml.model.DoubanReviewExample" resultType="java.lang.Integer" >
    select count(*) from douban_review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select  id="getResultByPageNum" resultMap="BaseResultMap" parameterType="int">
  	select * from douban_review limit #{offset,jdbcType=INTEGER},50
  </select>
  
  <select  id="getFilterResult" resultMap="BaseResultMap" parameterType="Map">
  	select * from douban_review where movie_name like CONCAT('%','${app_name}','%') limit #{offset,jdbcType=INTEGER},50
  </select>
  
  <select	id="ajax_project_page_num" resultType="int" parameterType="Map">
  	select count(1) from douban_review where movie_name like CONCAT('%','${app_name}','%')
  </select>
  
  <select	id="getMovieNames" resultType="string" parameterType="Map">
  	select movie_name from douban_review group by movie_name
  </select>
</mapper>